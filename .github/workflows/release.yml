name: Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths-ignore:
      - "package.json"
      - "pnpm-lock.yaml"
  workflow_dispatch:
    inputs:
      release-type:
        description: "Type of version bump"
        required: true
        default: patch
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write
  
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: pnpm install --frozen-lockfile
      - run: pnpm test
      - name: Upload coverage
        uses: codecov/codecov-action@v3

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint

  release:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: |
      github.event_name == 'workflow_dispatch' ||
      contains(github.event.head_commit.message, 'release')

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2
        with:
          version: 10

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - run: pnpm install --frozen-lockfile

      - name: Determine release type
        id: bump
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "type=${{ github.event.inputs.release-type }}" >> $GITHUB_OUTPUT
          else
            last_commit=$(git log -1 --pretty=%B)
            if echo "$last_commit" | grep -iq "\[major\]"; then
              echo "type=major" >> $GITHUB_OUTPUT
            elif echo "$last_commit" | grep -iq "\[minor\]"; then
              echo "type=minor" >> $GITHUB_OUTPUT
            else
              echo "type=patch" >> $GITHUB_OUTPUT
            fi
          fi

      - name: NPM Release
        run: |
          git config user.name "Vincent Vu"
          git config user.email "172068404+rubixvi@users.noreply.github.com"
          pnpm release:${{ steps.bump.outputs.type }}
          git push --follow-tags origin main
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: GitHub Release
        run: |
          VERSION=$(node -p "require('./package.json').version")
          gh release create "v$VERSION" \
            --title "Release v$VERSION" \
            --generate-notes || echo "Release already exists"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
